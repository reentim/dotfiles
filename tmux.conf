set-option -g default-shell $SHELL
set -g default-terminal "screen-256color"

set -g base-index 1
setw -g pane-base-index 1

set -g update-environment "DISPLAY SSH_ASKPASS SSH_AGENT_PID SSH_CONNECTION WINDOWID XAUTHORITY ITERM_PROFILE ITERM_SESSION_ID"

if-shell "uname | grep -qv Darwin" "set-environment -g 'SSH_AUTH_SOCK' ~/.ssh/ssh_auth_sock"

set -g prefix C-a

# Set scroll buffer
set -g history-limit 5000

#setting the delay between prefix and command
set -sg escape-time 1

# mouse support
setw -g mode-mouse on
set -g mouse-select-pane on
set -g mouse-resize-pane on
set -g mouse-select-window on

# enable activity alerts
setw -g monitor-activity off
set -g visual-activity off

# set the status line's colors
set -g status-fg default
set -g status-bg default

# pane colors
set -g pane-border-fg green
set -g pane-border-bg default
set -g pane-active-border-fg green
set -g pane-active-border-bg default

# Command / message line
set -g message-fg white
set -g message-bg black
set -g message-attr bright

# Status line
# ------------------------------------------------------------------------------
  set -g status-utf8 on
  set -g status-interval 1

  # Status line left side
  set -g status-left-length 40
  set -g status-left "#[fg=green]Session: #S #[fg=yellow]#I #[fg=cyan]#P"

  # Status line right side: clock
  set -g status-right "#[fg=green]%a %-d %b %R"

  # Center the window list
  set -g status-justify centre

  # set the color of the window list
  setw -g window-status-fg default
  setw -g window-status-bg default
  setw -g window-status-attr dim

  # set colors for the active window
  setw -g window-status-current-fg default
  setw -g window-status-current-bg white
  setw -g window-status-current-attr bright

  # enable vi keys.
  setw -g mode-keys vi

# Bindings
# ------------------------------------------------------------------------------
  # Ensure that we can send Ctrl-A to other apps
  bind C-a send-prefix

  # Reload the file with Prefix r
  bind r source-file ~/.tmux.conf \; display "Reloaded!"

  # Quick pane selection
  bind -r C-h select-window -t :-
  bind -r C-l select-window -t :+

  # Pane resizing
  bind -r H resize-pane -L 5
  bind -r J resize-pane -D 5
  bind -r K resize-pane -U 5
  bind -r L resize-pane -R 5

  # Log output to a text file on demand
  bind P pipe-pane -o "cat >>~/#W.log" \; display "Toggled logging to ~/#W.log"

  # Smart pane switching with awareness of vim splits
  bind -n C-h run-shell 'tmux-vim-select-pane -L'
  bind -n C-j run-shell 'tmux-vim-select-pane -D'
  bind -n C-k run-shell 'tmux-vim-select-pane -U'
  bind -n C-l run-shell 'tmux-vim-select-pane -R'

  # Since C-l is used above, add Option-l fallback for screen clearing
  bind -n M-l send-keys "C-l"

  bind -n M-k clear-history

  # Open new splits and windows in the current working directory
  # http://unix.stackexchange.com/questions/12032
  bind '"' split-window -c "#{pane_current_path}"
  bind % split-window -h -c "#{pane_current_path}"
  bind c new-window -c "#{pane_current_path}"

  bind -n M-k clear-history

if-shell "iterm_session_profile | grep Light" "source ~/.tmux-light.conf"
