#!/usr/bin/env ruby --disable-gems

require 'time'
require 'csv'

require_relative '../lib/interval'

class Todos
  include Interval

  FILE = File.join(Dir.home, 'iCloud-Drive/todo.txt')

  def initialize(args)
    if args.count == 1
      case args.first
      when 'ls'
        return list
      when 'edit'
        return edit
      end
    end

    todos = []
    if args.any?
      todos << args.join("\s")
    else
      loop do
        begin
          input = gets
          break if input.nil?
          todos << input.chomp
        rescue Interrupt
          save(todos)
          exit 1
        end
      end
    end
    save(todos)
  end

  def edit
    system((ENV['EDITOR'] || 'vim'), FILE)
  end

  def save(todos)
    return if todos.empty?

    CSV.open(FILE, 'a') do |file|
      todos.each { |todo| file << [Time.now.iso8601, todo] }
    end

    puts "Added #{todos.count} #{todos.count > 1 ? 'items' : 'item'}"
  end

  def saved_todos
    @_saved_todos ||= CSV.read(FILE).map do |todo|
      [interval(Time.now - Time.parse(todo[0])) + ' ago', todo[1]]
    end
  end

  def list
    return unless saved_todos.any?

    saved_todos.map do |todo|
      puts [
        todo[0].rjust(saved_todos.map(&:first).max_by(&:length).length),
        todo[1]
      ].join(" - ")
    end
  end
end

Todos.new(ARGV)
