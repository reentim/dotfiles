#!/usr/bin/env bash

set -euo pipefail

find_gnu_awk() {
  for cmd in gawk awk; do
    if command -v "$cmd" >/dev/null && "$cmd" --version 2>&1 | grep -q "GNU Awk"; then
      echo "$cmd"
      return 0
    fi
  done
  echo "This script requires GNU Awk. Install it with 'brew install gawk' (macOS) or your package manager." >&2
  exit 1
}

parse_cmd_and_section() {
  local arg1=$1
  local arg2=${2:-}

  if [[ $arg1 =~ ^(.+)\(([0-9a-z]+)\)$ ]]; then
    CMD="${BASH_REMATCH[1]}"
    SECTION="${BASH_REMATCH[2]}"
  elif [[ -n $arg2 ]]; then
    SECTION="$arg1"
    CMD="$arg2"
  else
    CMD="$arg1"
    SECTION=""
  fi
}

fetch_man_page() {
  if [[ -n $SECTION ]]; then
    man "$SECTION" "$CMD" | col -bx
  else
    man "$CMD" | col -bx
  fi
}

extract_elements() {
  "$AWK" '
    function trim(s) {
      sub(/^[[:space:]]+/, "", s)
      sub(/[[:space:]]+$/, "", s)
      return s
    }

    /^[A-Z][A-Z ]+$/ {
      section = trim($0)
      print "[SECTION] " section
      next
    }

    /^[[:space:]]+-[-a-zA-Z0-9]/ {
      match($0, /^ *([^ ]+)/, opt)
      split(opt[1], parts, ",")
      for (i in parts) {
        gsub(/^[[:space:]]+/, "", parts[i])
        if (length(parts[i]) > 0)
          print "[OPTION] " parts[i]
      }
      next
    }

    # ENVIRONMENT variable lines (e.g., FOO=bar or FOO ...)
    section == "ENVIRONMENT" && /^[[:upper:]_0-9-]+=|^[[:space:]]*[[:upper:]_0-9-]+/ {
      match($0, /^[[:space:]]*([[:upper:]_0-9-]+)/, env)
      if (env[1] != "")
        print "[ENV] " env[1]
      next
    }

    # FILE paths, often absolute paths
    section == "FILES" && /(\/[^[:space:]]+)/ {
      while (match($0, /(\/[^[:space:]]+)/, file)) {
        print "[FILE] " file[1]
        $0 = substr($0, RSTART + RLENGTH)
      }
    }
  '
}

main() {
  if [[ $# -lt 1 ]]; then
    echo "Usage: manf [command] or manf [section] [command] or manf command(section)" >&2
    exit 1
  fi

  AWK=$(find_gnu_awk)
  parse_cmd_and_section "$@"
  fetch_man_page | extract_elements
}

main "$@"
