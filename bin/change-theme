#!/usr/bin/env -S ruby --disable-gems

def main
  theme_name = ARGV[0]

  abort unless theme_name

  case ENV['TERM_PROGRAM']
  when 'Alacritty'
    apply_theme_from_name(
      name: theme_name,
      dir: ".config/alacritty/alacritty-theme/themes",
      link: File.join(Dir.home, ".config/alacritty/theme.toml"),
    ) do |did_succeed|
      did_succeed && system("touch ~/.config/alacritty/alacritty.toml")
    end
  when 'Kitty'
    Process.kill("SIGUSR1", %x[pgrep kitty].to_i)
  end

  tmux_link = File.join(Dir.home, ".tmux/colors/theme.conf")

  expected_theme_file_name = "#{to_filename(theme_name)}.conf"
  unless File.exist?(File.join(Dir.home, ".tmux/colors/themes", expected_theme_file_name))
    puts %[cp ~/.tmux/colors/default.conf ~/.tmux/colors/themes/#{expected_theme_file_name}]
    %x[cp ~/.tmux/colors/default.conf ~/.tmux/colors/themes/#{expected_theme_file_name}]
  end
  apply_theme_from_name(
    name: theme_name,
    dir: ".tmux/colors/themes",
    link: tmux_link,
  ) do |did_succeed|
    if did_succeed
      if system("tmux ls >/dev/null 2>&1")
        %x[tmux source-file ~/.tmux/colors/colors.conf]
      end
    else
    end
  end

  system(%x[echo "#{theme_name}" > "$HOME/.TERM_PROFILE"])
end

def apply_theme_from_name(name:, dir:, link:)
  theme_dir = File.join(Dir.home, dir)
  themes = Dir.glob(File.join(theme_dir, "/*"))

  theme = themes.find { |f|
    to_filename(name) == to_filename(File.basename(f, ".*"))
  }

  if theme.nil?
    puts "Couldn't find file for #{name} in #{theme_dir}"
    yield(false)
  else
    puts "ln -sf #{theme} #{link}"
    system "ln -sf #{theme} #{link}"
    yield(true)
  end
end

def to_filename(str)
  str
    .gsub(/\s/, '_')
    .gsub(/-/, '_')
    .downcase
end

main

# vim:ft=ruby
