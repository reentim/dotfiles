#!/usr/bin/env bash

set -euo pipefail

wallpaper_dir="${WALLPAPER_DIR-$HOME/Pictures/wallpaper}"
current_wallpaper="$(hyprctl hyprpaper listloaded)"
hyprpaper_conf="$HOME/.config/hypr/hyprpaper.conf"
trash_dir="$HOME/Pictures/wallpaper/_trash"
tag_dir="${TAG_DIR-$HOME/Pictures/wallpaper/_tags}"

main() {
  find_mode=false
  shuffle_mode=false
  trash_mode=false
  like_mode=false
  tag_mode=false

  while [[ $# -gt 0 ]]; do
    case "$1" in
      --find|-f)
        find_mode=true
        shift
        ;;
      --shuffle|-s)
        shuffle_mode=true
        shift
        ;;
      --remove|-r)
        trash_mode=true
        shift
        ;;
      --like|-l)
        like_mode=true
        shift
        ;;
      --tag|-t)
        tag_mode=true
        shift
        ;;
      *)
        $tag_mode && tag_wallpaper "${current_wallpaper}" "${1}" && exit
        $like_mode && like_wallpaper "${1}" && exit
        [[ -f $1 ]] && set_wallpaper "${1}" && exit
        break
        ;;
    esac
  done

  $find_mode && $trash_mode && remove_wallpaper "$(find_wallpaper)" && exit
  $find_mode && $tag_mode && tag_wallpaper "$(find_wallpaper)" && exit
  $find_mode && $like_mode && like_wallpaper "$(find_wallpaper)" && exit
  $find_mode && $shuffle_mode && shuffle_wallpaper "$(find_wallpaper '-type d')" && exit
  $like_mode && like_wallpaper "${current_wallpaper}"
  $trash_mode && remove_wallpaper "${current_wallpaper}"
  $tag_mode && tag_wallpaper "${current_wallpaper}"
  $find_mode && set_wallpaper "$(find_wallpaper)"
  $shuffle_mode && shuffle_wallpaper
  exit 0
}

shuffle_wallpaper() {
  shuffle_dir="${1-${wallpaper_dir}}"
  [[ -z $shuffle_dir ]] && exit 1
  prune_dir='/dev/null'
  [[ $shuffle_dir == $wallpaper_dir ]] && prune_dir="${tag_dir}"
  wallpaper=$(find "${shuffle_dir}" \
    -path ${prune_dir} -prune \
    -o -type f \
    -o -type l \
    ! -name "$(basename ${current_wallpaper})" \
    | shuf -n 1)
  set_wallpaper "${wallpaper}"
}

set_wallpaper() {
  file="${1}"
  [[ -f $file ]] || exit 1
  hyprctl hyprpaper reload , "${file}"
  echo "reload = , "${file}"" > "$hyprpaper_conf"
}

remove_wallpaper() {
  mkdir -p "${trash_dir}"
  mv "${1-${current_wallpaper}}" "${trash_dir}" &&
    echo "ðŸš® moved to $(relative_path "${trash_dir}")"
  }

like_wallpaper() {
  [[ -z $1 ]] && exit 1
  tag_wallpaper "${1}" "liked"
}

tag_wallpaper() {
  wallpaper="${1}"
  tag="${2-}"
  echo "Select or create tag:"
  if [[ -z $tag ]]; then
    tag="$(find "${wallpaper_dir%/}/_tags" -mindepth 1 -type d -print0 \
      | xargs -0 -n 1 basename \
      | fzf --exact --print-query \
      | tail -n 1
    )"
  fi
  [[ -n "$tag" ]] || exit 1
  tag_dir="${wallpaper_dir%/}/_tags/${tag}"
  mkdir -p "${tag_dir}"
  ln -sf \
    "${wallpaper}" \
    "${tag_dir%/}/$(basename ${wallpaper})" >/dev/null 2>&1 \
    && echo "âœ… tagged as '${tag}': $(basename ${wallpaper})"
  }

find_wallpaper() {
  type_opt="${1--type f -o -type l}"
  wallpaper_path "$(\
    find "${wallpaper_dir}" -mindepth 1 ${type_opt} \
    | sed "s|^${wallpaper_dir}/||" \
    | fzf --exact)"
}

relative_path() {
  local path=$1
  if [[ $path == "$HOME" || $path == "$HOME/"* ]]; then
    echo "~${path#$HOME}"
  else
    echo "$path"
  fi
}

wallpaper_path() {
  [[ -z $1 ]] && exit 1
  echo "${wallpaper_dir/%}/${1}"
}

main "$@"
