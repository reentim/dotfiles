#!/usr/bin/env bash

# Customisation of standard behaviour
alias tree='tree -FC --dirsfirst'
alias rspec='rspec --color --tty --format documentation'
alias tmux='tmux -u' # force utf-8
alias grep='grep --color=always'

ls_opt='--color=auto --group-directories-first --file-type --time-style=+"%Y-%m-%d %X"'
alias ls="ls $ls_opt"

if [[ $SYSTEM_TYPE == 'Darwin' ]]; then
	# use GNU ls if it's available
	if $(which gls > /dev/null); then
		alias ls="gls $ls_opt"
	else
		alias ls='ls -CFG'
	fi
fi

if [[ $SYSTEM_TYPE == 'Darwin' ]]; then
	if (which gstat > /dev/null); then
		alias stat="gstat"
	fi
fi

alias l='ls -lGgh' # list, omit group, omit owner, human readable sizes
alias ll='ls -la'  # list, show all files
alias la='ls -A'   # no list, show almost all

# Key-saving shortcuts
alias vi='vim'
alias bx='bundle exec'
alias duh='du -csh'
alias sr='screen -r'
alias t='tmux'
alias ta='t a'

# Kind of new things
alias ff='find . -type f 2>/dev/null | ack -i '
alias cdr='cd $(git rev-parse --show-cdup)'     # cd to git root

function staging-deploy-1 {
  bundle exec cap staging1 deploy
    -S branch=\"$(git rev-parse --abbrev-ref HEAD)\"
    -S php_branch=\"$(git rev-parse --abbrev-ref HEAD)\"
}
function staging-deploy-2 {
  bundle exec cap staging2 deploy
    -S branch=\"$(git rev-parse --abbrev-ref HEAD)\"
    -S php_branch=\"$(git rev-parse --abbrev-ref HEAD)\"
}

function delete-local-merged-branches {
  git branch --merged |
    grep -v "*" |
    grep -v master |
    xargs -n 1 git branch -d
}

function delete-remote-merged-branches {
  git branch -a --merged origin/master |
    grep --color=never remotes |
    grep -v HEAD |
    grep -v master |
    sed "s:remotes/origin/::g" |
    xargs -L 1 git push origin --delete
}

function blame-leaderboard {
  search=$1
  shift

  # exit unless search yields matches
  if [[ $(ag $search $* | wc -l) < 1 ]]; then
    return;
  fi

  ag $search $* |
    sed -E "s:\s::g" |                                     # collapse whitespace
    awk -F ":" '{ printf("%s -L %s,%s\n", $1, $2, $2) }' | # results => git blame options
    xargs -L 1 git --no-pager blame -cw |                  # run git blame for each
    iconv -c -f utf-8 -t ascii |                           # strip non-ascii
    command grep -Po "\t\((\S| )+" |                       # only print author
    sed "s:(::" |                                          # remove leading paren
    xargs -L 1 echo |                                      # trim whitespace
    sort | uniq -c | sort -nr                              # tally
}
