#!/usr/bin/env bash

alias tree='tree -FC --dirsfirst'
alias rspec='rspec --color --tty --format documentation'
alias grep='grep --color=auto'

ls_opt='--color=auto --group-directories-first --file-type --time-style=+"%F %T"'
alias ls="ls $ls_opt"

if [[ $(uname) == 'Darwin' ]]; then
  # use GNU ls if it's available
  if $(which gls > /dev/null); then
    alias ls="gls $ls_opt"
  else
    alias ls='ls -CFG'
  fi
fi

if [[ $(uname) == 'Darwin' ]]; then
  if (which gstat > /dev/null); then
    alias numfmt="gnumfmt"
  fi
fi

alias l='ls -1' # list, omit group, omit owner, human readable sizes
alias ll='ls -la'  # list, show all files
alias la='ls -A'   # no list, show almost all
alias vi='vim'
alias diff='colordiff -u'
alias bx='bundle exec'
alias duh='du -csh'
alias sr='screen -r'
alias t='tmux'
alias ta='t a'
alias sshu='ssh -A -l ubuntu '
alias cdr='cd $(git rev-parse --show-cdup 2>/dev/null)'

function delete-local-merged-branches {
  git branch --merged |
    grep -v "*" |
    grep -v master |
    grep -v staging |
    xargs -n 1 git branch -d
}

function delete-remote-merged-branches {
  git branch -a --merged origin/master |
    grep --color=never remotes |
    grep -v HEAD |
    grep -v staging |
    grep -v developement |
    grep -v master |
    sed "s:remotes/origin/::g" |
    xargs -L 1 git push origin --delete
}

function staging-deploy {
  git push && git push staging staging:master
}

function production-deploy {
  git push uat master && heroku pipelines:promote -a adboxapp
}

zz() {
  arg=$*
  if [ $args ]; then
    cd $(
      z -l $args | tac | awk '{ print $2 }' | selecta
    )
  else
    cd $(
      cat ~/.z \
        | awk -F '|' '{ print $2,$3,$1 }' \
        | sort -nr \
        | awk '{ print $3 }' \
        | selecta
    )
  fi
}

git-rm-submodule() {
  path_to_submodule=$1
  git submodule deinit $path_to_submodule
  git rm $path_to_submodule
  rm -rf .git/modules/${path_to_submodule}
}

alias killpid="ps axww -o pid,user,%cpu,%mem,start,time,command | selecta | sed 's/^ *//' | cut -f1 -d' ' | xargs kill -s SIGTERM"
alias findpid="ps axww -o pid,user,%cpu,%mem,start,time,command | selecta | sed 's/^ *//' | cut -f1 -d' ' | tee >(pbcopy)"

alias asdf="find-repos | xargs selecta | cd"

function fresh-internet() {
  if [ -f latest.dump ]; then
    mv latest.dump* /tmp
  fi
  heroku pg:backups:download -a $(basename $(pwd))
  pg_restore --verbose --clean --no-acl --no-owner -h localhost -d $(finddb $(pwd)) latest.dump
}
