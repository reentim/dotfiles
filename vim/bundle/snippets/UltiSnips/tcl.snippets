# #!/usr/bin/env tclsh
snippet #! "#!" w
#!/usr/bin/env tclsh
endsnippet

# Process
snippet pro "pro" w
proc ${1:function_name} {${2:args}} {
	${3:#body ...}
}
endsnippet

#xif
snippet xif "xif" w
${1:expr}? ${2:true} : ${3:false}
endsnippet

# Conditional
snippet if "if" w
if {${1}} {
	${2:# body...}
}
endsnippet

# Conditional if..else
snippet ife "ife" w
if {${1}} {
	${2:# body...}
} else {
	${3:# else...}
}
endsnippet

# Conditional if..elsif..else
snippet ifee "ifee" w
if {${1}} {
	${2:# body...}
} elseif {${3}} {
	${4:# elsif...}
} else {
	${5:# else...}
}
endsnippet

# If catch then
snippet ifc "ifc" w
if { [catch {${1:#do something...}} ${2:err}] } {
	${3:# handle failure...}
}
endsnippet

# Catch
snippet catch "catch" w
catch {${1}} ${2:err} ${3:options}
endsnippet

# While Loop
snippet wh "wh" w
while {${1}} {
	${2:# body...}
}
endsnippet

# For Loop
snippet for "for" w
for {set ${2:var} 0} {$$2 < ${1:count}} {${3:incr} $2} {
	${4:# body...}
}
endsnippet

# Foreach Loop
snippet fore "fore" w
foreach ${1:x} {${2:#list}} {
	${3:# body...}
}
endsnippet

# after ms script...
snippet af "af" w
after ${1:ms} ${2:#do something}
endsnippet

# after cancel id
snippet afc "afc" w
after cancel ${1:id or script}
endsnippet

# after idle
snippet afi "afi" w
after idle ${1:script}
endsnippet

# after info id
snippet afin "afin" w
after info ${1:id}
endsnippet

# Expr
snippet exp "exp" w
expr {${1:#expression here}}
endsnippet

# Switch
snippet sw "sw" w
switch ${1:var} {
	${3:pattern 1} {
		${4:#do something}
	}
	default {
		${2:#do something}
	}
}
endsnippet

# Case
snippet ca "ca" w
${1:pattern} {
	${2:#do something}
}${3}
endsnippet

# Namespace eval
snippet ns "ns" w
namespace eval ${1:path} {${2:#script...}}
endsnippet

# Namespace current
snippet nsc "nsc" w
namespace current
endsnippet


