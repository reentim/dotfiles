# Progress/OpenEdge ABL snippets
# define
snippet defbuf "defbuf" w
DEFINE BUFFER b_${1:TableName} FOR $1 ${2}.
endsnippet

snippet defvar "defvar" w
DEFINE VARIABLE ${1:VariableName} AS ${2}.
endsnippet

snippet nl "nl" w
NO-LOCK
endsnippet

snippet ne "ne" w
NO-ERROR
endsnippet

snippet nle "nle" w
NO-LOCK NO-ERROR
endsnippet

snippet ini "ini" w
INITIAL ${1:?}
endsnippet

snippet nu "nu" w
NO-UNDO
endsnippet

snippet err "err" w
ERROR
endsnippet

snippet ff "ff" w
FIND FIRST ${1:BufferName}
${2:WHERE $1.${3}} ${4}
endsnippet

snippet input "input" w
DEFINE INPUT PARAMETER ${1:ParamName} AS ${2}.
endsnippet

snippet output "output" w
DEFINE OUTPUT PARAMETER ${1:ParamName} AS ${2:ParamType}.
endsnippet

snippet proc "proc" w
/******************************************************************************/
PROCEDURE ${1:ProcName}:
	${2}
END PROCEDURE. /* $1 */
/******************************************************************************/
endsnippet

snippet alert "alert" w
MESSAGE "${1:MessageContent}" ${2:Data} VIEW-AS ALERT-BOX.
endsnippet

snippet if "if" w
IF ${1:Condition}
THEN ${2:Action}
${3:ELSE ${4:OtherWise}}
endsnippet

snippet do "do" w
DO${1: Clauses}:
	${2}
END.
endsnippet

# datatypes
snippet int "int" w
INTEGER
endsnippet

snippet char "char" w
CHARACTER
endsnippet

snippet log "log" w
LOGICAL
endsnippet

snippet dec "dec" w
DECIMAL
endsnippet

snippet sep "sep" w
/* ------------------------------------------------------------------------- */ 
endsnippet


